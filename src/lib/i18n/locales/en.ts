export const en = {
  // Welcome page
  welcome: {
    title: "Welcome to Claudia",
    ccAgents: "CC Agents",
    ccAgentsDescription: "Manage your Claude Code agents",
    ccProjects: "CC Projects",
    ccProjectsDescription: "Browse your Claude Code projects"
  },
  
  // Navigation
  navigation: {
    backToHome: "← Back to Home",
    usageDashboard: "Usage Dashboard",
    claudeMd: "CLAUDE.md",
    mcp: "MCP",
    settings: "Settings",
    info: "Info",
    projects: "CC Projects",
  },
  
  // Projects
  projects: {
    title: "CC Projects",
    subtitle: "Browse your Claude Code sessions",
    browseDescription: "Browse and manage your Claude Code projects",
    newSession: "New session",
    noProjects: "No projects found in ~/.claude/projects",
    session: "session",
    sessions: "sessions",
    browseSession: "Browse this session",
    loading: "Loading projects...",
    sessionHistory: "Session History",
    firstMessage: "First message",
    hasTodo: "Has todo",
    noProjectsFound: "No projects found"
  },
  
  // Agents
  agents: {
    title: "CC Agents",
    createNew: "Create CC Agent",
    runningAgents: "Running Agents",
    execute: "Execute",
    noAgents: "No agents found",
    agentExecution: "Agent Execution",
    backgroundExecution: "Background Execution",
    manageAgents: "Manage your Claude Code agents",
    import: "Import",
    fromFile: "From File",
    fromGitHub: "From GitHub",
    agents: "Agents",
    runningSessions: "Running Sessions",
    noAgentsYet: "No agents yet",
    createFirstAgent: "Create your first CC Agent to get started",
    createAgent: "Create CC Agent",
    edit: "Edit",
    export: "Export",
    delete: "Delete",
    executeAgent: "Execute agent",
    editAgent: "Edit agent",
    exportAgent: "Export agent to .claudia.json",
    deleteAgent: "Delete agent",
    recentExecutions: "Recent Executions",
    deleteConfirm: "Delete Agent",
    deleteMessage: "Are you sure you want to delete the agent",
    deleteWarning: "This action cannot be undone and will permanently remove the agent and all its associated data.",
    running: "Running",
    pending: "Pending",
    created: "Created",
    viewOutput: "View Output",
    stop: "Stop",
    task: "Task",
    model: "Model",
    duration: "Duration",
    projectPath: "Project Path",
    sessionId: "Session ID",
    unknown: "Unknown",
    noRunningSessions: "No agent sessions are currently running",
    loadingRunningSessions: "Loading running sessions...",
    runningSessionsUpdated: 'Running sessions list has been updated',
    failedToRefresh: 'Failed to refresh sessions',
    failedToLoad: 'Failed to load running sessions',
    sessionStopped: '{agentName} session has been stopped',
    sessionMayFinished: 'Session may have already finished',
    failedToTerminate: 'Failed to terminate session',
  },
  
  // Status
  status: {
    checking: "Checking...",
    claudeNotFound: "Claude Code CLI not found",
    selectInstallation: "Select Claude Installation",
    installClaude: "Install Claude Code",
    connected: "Connected",
    disconnected: "Disconnected",
  },
  
  // UI elements
  ui: {
    loading: "Loading...",
    backToHome: "Back to Home",
    saving: "Saving...",
    refresh: "Refresh",
    cancel: "Cancel",
    close: "Close",
    previous: "Previous",
    next: "Next",
    page: "Page",
    of: "of",
    noOutput: "No output available"
  },

  // Common
  common: {
    loading: "Loading...",
    error: "Error",
    success: "Success",
    cancel: "Cancel",
    save: "Save",
    saving: "Saving",
    delete: "Delete",
    edit: "Edit",
    back: "Back",
    next: "Next",
    previous: "Previous",
    close: "Close",
    confirm: "Confirm",
    create: "Create",
    update: "Update",
    refresh: "Refresh",
  },
  
  // Settings
  settings: {
    title: "Settings",
    language: "Language",
    selectLanguage: "Select Language",
    theme: "Theme",
    general: "General",
    preferences: "Preferences",
    configurePreferences: "Configure your preferences and permissions",
    saving: "Saving...",
    saveSettings: "Save Settings",
    generalSettings: "General Settings",
    permissions: "Permissions",
    environment: "Environment",
    advanced: "Advanced",
    verboseOutput: "Verbose Output",
    claudeInstallation: "Claude Code Installation",
    permissionRules: "Permission Rules",
    allowRules: "Allow Rules",
    denyRules: "Deny Rules",
    environmentVariables: "Environment Variables",
    advancedSettings: "Advanced Settings",
    apiKeyHelper: "API Key Helper Script",
    includeCoauthored: 'Include "Co-authored by Claude"',
    includeCoauthoredDesc: 'Add Claude attribution to git commits and pull requests',
    verbose: 'Verbose Output',
    verboseDesc: 'Show full bash and command outputs',
    cleanup: 'Chat Transcript Retention (days)',
    cleanupDesc: 'How long to retain chat transcripts locally (default: 30 days)',
    installation: 'Claude Code Installation',
    installationDesc: 'Select which Claude Code installation to use',
    binaryChanged: '⚠️ Claude binary path has been changed. Remember to save your settings.',
    permissionRulesDesc: 'Control which tools Claude Code can use without manual approval',
    addRule: 'Add Rule',
    noAllowRules: 'No allow rules configured. Claude will ask for approval for all tools.',
    noDenyRules: 'No deny rules configured.',
    allowExample: 'e.g., Bash(npm run test:*)',
    examples: 'Examples:',
    envVars: 'Environment Variables',
    envVarsDesc: 'Environment variables applied to every Claude Code session',
    addVar: 'Add Variable',
    noEnvVars: 'No environment variables configured.',
    commonVars: 'Common variables:',
    advancedSettingsDesc: 'Additional configuration options for advanced users',
    apiKeyHelperDesc: 'Custom script to generate auth values for API requests',
    rawSettings: 'Raw Settings (JSON)',
    rawSettingsDesc: 'This shows the raw JSON that will be saved to ~/.claude/settings.json',
    saveSuccess: 'Settings saved successfully!',
    saveFailed: 'Failed to save settings',
    loadFailed: 'Failed to load settings. Please ensure ~/.claude directory exists.',
    allowExampleBashAll: 'Allow all bash commands',
    allowExampleBashExact: 'Allow exact command',
    allowExampleBashPrefix: 'Allow commands with prefix',
    allowExampleReadFile: 'Allow reading specific file',
    allowExampleEditDocs: 'Allow editing files in docs directory',
    varTelemetryDesc: 'Enable/disable telemetry (0 or 1)',
    varModelDesc: 'Custom model name',
    varDisableCostDesc: 'Disable cost warnings (1)',
  },
  
    // File operations
  file: {
    editor: "File Editor",
    browser: "File Browser",
    management: "File Management",
    preview: "Preview",
    editSystemPrompt: "Edit system prompt for Claude Code CLI",
    save: "Save",
    saving: "Saving..."
  },

  // Dashboard
  dashboard: {
    usage: "Usage Dashboard",
    analytics: "Analytics",
    statistics: "Statistics",
    overview: "Overview",
    trackUsage: "Track your Claude Code usage and analytics",
    allTime: "All Time",
    last7Days: "Last 7 Days",
    last30Days: "Last 30 Days",
    totalCost: "Total Cost",
    totalSessions: "Total Sessions",
    totalTokens: "Total Tokens",
    byModel: "By Model",
    byProject: "By Project",
    bySession: "By Session",
    timeline: "Timeline",
    tokenBreakdown: "Token Breakdown",
    inputTokens: "Input Tokens",
    outputTokens: "Output Tokens",
    cacheWrite: "Cache Write",
    cacheRead: "Cache Read",
    tokens: "tokens",
    mostUsedModels: "Most Used Models",
    topProjects: "Top Projects",
    usageByModel: "Usage by Model",
    usageByProject: "Usage by Project",
    usageBySession: "Usage by Session",
    dailyUsage: "Daily Usage",
    input: "Input",
    output: "Output",
    avgCostPerSession: 'Avg Cost/Session',
    loading: 'Loading usage statistics...',
    tryAgain: 'Try Again',
    noData: 'No usage data available for the selected period',
    dailyUsageOverTime: 'Daily Usage Over Time',
    sessions: 'sessions',
    cacheW: 'Cache W',
    cacheR: 'Cache R',
    model: 'model',
    cost: 'Cost',
  },

    // MCP
  mcp: {
    title: "MCP Servers",
    manageServers: "Manage your Model Context Protocol servers",
    addServer: "Add Server",
    importExport: "Import/Export",
    servers: "Servers",
    configuredServers: 'Configured Servers',
    serversConfigured: '{count} server{plural} configured',
    refresh: 'Refresh',
    noServers: 'No MCP servers configured',
    addServerHint: 'Add a server to get started with Model Context Protocol',
    showFull: 'Show full',
    hide: 'Hide',
    copy: 'Copy',
    copied: 'Copied!',
    command: 'Command',
    arguments: 'Arguments',
    url: 'URL',
    envVars: 'Environment variables',
    envVarsTitle: 'Environment Variables',
    running: 'Running',
    localScope: 'Local (Project-specific)',
    projectScope: 'Project (Shared via .mcp.json)',
    userScope: 'User (All projects)',
    failedToLoadServers: 'Failed to load MCP servers. Make sure Claude Code is installed.',
    serverAdded: 'MCP server added successfully!',
    serverRemoved: 'Server "{name}" removed successfully!',
    importSuccess: 'Successfully imported {count} server{plural}!',
    importMixed: 'Imported {count} server{plural}, {failed} failed',
    addTitle: 'Add MCP Server',
    addDescription: 'Configure a new Model Context Protocol server',
    stdio: 'Stdio',
    sse: 'SSE',
    serverName: 'Server Name',
    serverNameHelp: 'A unique name to identify this server',
    serverNameRequired: 'Server name is required',
    commandHelp: 'The command to execute the server',
    commandRequired: 'Command is required',
    argumentsOptional: 'Arguments (optional)',
    argumentsHelp: 'Space-separated command arguments',
    scope: 'Scope',
    urlRequired: 'URL is required',
    addServerFailed: 'Failed to add server',
    addingServer: 'Adding Server...',
    addStdioServer: 'Add Stdio Server',
    addSseServer: 'Add SSE Server',
    exampleCommands: 'Example Commands',
    importExportTitle: 'Import & Export',
    importExportDesc: 'Import MCP servers from other sources or export your configuration',
    importScope: 'Import Scope',
    importScopeHelp: 'Choose where to save imported servers from JSON files',
    importFromDesktop: 'Import from Claude Desktop',
    importFromDesktopDesc: 'Automatically imports all MCP servers from Claude Desktop. Installs to user scope (available across all projects).',
    importing: 'Importing...',
    importFromDesktopBtn: 'Import from Claude Desktop',
    importFromJson: 'Import from JSON',
    importFromJsonDesc: 'Import server configuration from a JSON file',
    chooseJsonFile: 'Choose JSON File',
    exportConfiguration: 'Export Configuration',
    exportConfigurationDesc: 'Export your MCP server configuration',
    exportComingSoon: 'Export functionality coming soon!',
    exportComingSoonBtn: 'Export (Coming Soon)',
    useAsMcpServer: 'Use Claude Code as MCP Server',
    useAsMcpServerDesc: 'Start Claude Code as an MCP server that other applications can connect to',
    startMcpServer: 'Start MCP Server',
    startMcpServerFailed: 'Failed to start Claude Code as MCP server',
    invalidJson: 'Invalid JSON file. Please check the format.',
    unrecognizedJson: 'Unrecognized JSON format. Expected MCP server configuration.',
    importJsonFailed: 'Failed to import JSON file',
    jsonExamples: 'JSON Format Examples',
    singleServer: 'Single server:',
    multipleServers: 'Multiple servers (.mcp.json format):',
  },

  webview: {
    preview: "Preview",
    failedToLoad: "Failed to load preview",
    enterUrl: "Enter a URL to preview",
    loadingPreview: "Loading preview...",
    tryEntering: "Try entering",
    orAnyUrl: "or any other URL",
    enterUrlPlaceholder: "Enter URL...",
    pageCouldNotLoad: "The page could not be loaded. Please check the URL and try again.",
    exitFullScreen: "Exit full screen (ESC)",
    enterFullScreen: "Enter full screen"
  },

  floatingPrompt: {
    compose: "Compose your prompt",
    typeHere: "Type your prompt here...",
    askAnything: "Ask Claude anything...",
    dropImages: "Drop images here...",
    model: "Model",
    thinking: "Thinking",
    stop: "Stop",
    sendHint: "Press Enter to send, Shift+Enter for new line{extra}",
    model_sonnet: "Claude 4 Sonnet",
    model_sonnet_desc: "Faster, efficient for most tasks",
    model_opus: "Claude 4 Opus",
    model_opus_desc: "More capable, better for complex tasks",
    auto: "Auto",
    letClaudeDecide: "Let Claude decide",
    think: "Think",
    thinkDesc: "Basic reasoning",
    thinkHard: "Think Hard",
    thinkHardDesc: "Deeper analysis",
    thinkHarder: "Think Harder",
    thinkHarderDesc: "Extensive reasoning",
    ultrathink: "Ultrathink",
    ultrathinkDesc: "Maximum computation"
  },

  agent: {
    create: 'Create CC Agent',
    edit: 'Edit CC Agent',
    createDesc: 'Create a new Claude Code agent',
    editDesc: 'Update your Claude Code agent',
    basicInfo: 'Basic Information',
    name: 'Agent Name',
    icon: 'Agent Icon',
    model: 'Model',
    sonnet: 'Claude 4 Sonnet',
    sonnetDesc: 'Faster, efficient for most tasks',
    opus: 'Claude 4 Opus',
    opusDesc: 'More capable, better for complex tasks',
    defaultTask: 'Default Task (Optional)',
    defaultTaskDesc: 'This will be used as the default task placeholder when executing the agent',
    systemPrompt: 'System Prompt',
    systemPromptDesc: 'Define the behavior and capabilities of your CC Agent',
    save: 'Save',
    saving: 'Saving...',
    unsavedConfirm: 'You have unsaved changes. Are you sure you want to leave?',
    nameRequired: 'Agent name is required',
    promptRequired: 'System prompt is required',
    createFailed: 'Failed to create agent',
    updateFailed: 'Failed to update agent',
    namePlaceholder: 'e.g., Code Assistant',
    defaultTaskPlaceholder: 'e.g., Review this code for security issues',
    iconLabel: 'Agent Icon',
    modelLabel: 'Model',
    systemPromptLabel: 'System Prompt',
    defaultTaskLabel: 'Default Task (Optional)',
  },

  claudeVersion: {
    failedToLoad: 'Failed to load Claude installations',
    noInstallations: 'No Claude Code installations found on your system.',
    selectInstallation: 'Select Claude Code Installation',
    current: 'Current',
    saveSelection: 'Save Selection',
  },

  claudeSession: {
    title: 'Claude Code Session',
    resuming: 'Resuming session {id}...',
    interactive: 'Interactive session',
    settingsBtn: 'Settings',
    timelineBtn: 'Timeline',
    closePreview: 'Close the preview pane',
    openPreview: 'Open a browser preview to test your web applications',
    copyOutput: 'Copy Output',
    copyAsMarkdown: 'Copy as Markdown',
    copyAsJsonl: 'Copy as JSONL',
    queuedPrompts: 'Queued Prompts',
    scrollTop: 'Scroll to top',
    scrollBottom: 'Scroll to bottom',
    loadingHistory: 'Loading session history...',
    initializing: 'Initializing Claude Code...',
    projectDir: 'Project Directory',
    projectDirPlaceholder: '/path/to/your/project',
    failedLoadHistory: 'Failed to load session history',
    selectProjectDir: 'Please select a project directory first',
    failedSelectDir: 'Failed to select directory: {msg}',
    failedSendPrompt: 'Failed to send prompt',
  },
};

export type Translations = typeof en; 